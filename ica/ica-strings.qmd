---
title: "Strings"
editor: visual
---

```{r}
library(tidyverse)
library(dplyr)

courses <- read.csv("https://mac-stat.github.io/data/registrar.csv")

# Check it out
head(courses)
```

```{r}
# Exercise 1

# Construct a table that indicates the number of classes offered in each day/time slot
# Print only the 6 most popular time slots

courses |> 
  count(days, time) |> 
  arrange(desc(n)) |> 
  head()



```

```{r}
# Exercise 2

courses_clean <- courses |> 
  separate(avail_max, c("avail", "max"), sep = " / ") |> 
  mutate(enroll = as.numeric(max) - as.numeric(avail)) |> 
  separate(number, c("dept", "number", "section"))
  
head(courses_clean)
```

```{r}
# Exercise 3

# Identify the 6 departments that offered the most sections

courses_clean |>
  count(dept) |>
  arrange(desc(n)) |>
  head()

# Identify the 6 departments with the longest average course titles

courses_clean |> 
  mutate(length = str_length(name)) |> 
  group_by(dept) |> 
  summarize(avg_length = mean(length)) |> 
  arrange(desc(avg_length)) |> 
  head()
  
```

```{r}

# Exercise 4
# part a
# Get a subset of courses_clean that only includes courses taught by Alicia Johnson.

courses_clean |> 
  filter(str_detect(instructor, "Alicia Johnson")) 

# part b
# Create a new dataset from courses_clean, named stat, that only includes STAT sections 

stat <- courses_clean |> 
  filter(dept == "STAT") |> 
  mutate(name = str_replace(name, "Introduction to ", "")) |>
  mutate(name = str_replace(name, "Statistical", "Stat")) |> 
  mutate(start_time = str_sub(time, 1, 5)) |> 
  select(number, name, start_time, enroll)
  dim(stat)


```

```{r}
# Exercise 5

enrollments <- courses_clean |> 
  filter(dept != "PE", dept != "INTD") |> 
  filter(!(dept == "MUSI" & as.numeric(number) < 100)) |> 
  filter(!(dept == "THDA" & as.numeric(number) < 100)) |> 
  filter(!str_detect(section, "L"))
  
head(enrollments)
```

```{r}

```
